<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.may.mapper.AppUserMapper">
    <resultMap id="BaseResultMap" type="com.example.may.po.AppUser">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="pid_no" property="pidNo" jdbcType="VARCHAR"/>
        <result column="bank_no" property="bankNo" jdbcType="VARCHAR"/>
        <result column="bank_name" property="bankName" jdbcType="VARCHAR"/>
        <result column="remain_point" property="remainPoint" jdbcType="DECIMAL"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, pid_no,  bank_no, bank_name, remain_point
    </sql>

    <select id="selectInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_app_user
    </select>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO t_app_user ( pid_no, bank_no, bank_name, remain_point)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
             #{item.pidNo},
            #{item.bankNo},
            #{item.bankName},
            #{item.remainPoint}
            )
        </foreach>
    </insert>




    <insert id="batInsQuery">
        INSERT INTO t_mon_202403 (import_date, pid_no, bank_no, bank_name, reward_point, expiration_date)
        SELECT b.import_date,
               b.pid_no,
               b.bank_no,
               b.bank_name,
               b.reward_point,
               b.expiration_date
        FROM t_import_temp b
        WHERE NOT EXISTS (SELECT c.import_date, c.pid_no, c.bank_no, c.bank_name, c.reward_point, c.expiration_date
                          FROM t_mon_202403 c
                          WHERE c.pid_no = b.pid_no);
    </insert>

    <select id="selectByPidNo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_app_user
        where FIND_IN_SET(pid_no, #{pidNos})
    </select>

    <!-- 该批量更新，需要开启mysql批量操作，默认关闭，数据库链接url增加开启：&allowMultiQueries=true -->
<!--    <update id="batshUpdate">-->
<!--        <foreach collection="list" item="item" index="index" separator=";">-->
<!--            UPDATE t_app_user-->
<!--            <set>-->
<!--                pid_no = #{item.pidNo},-->
<!--                bank_no = #{item.bankNo},-->
<!--                bank_name = #{item.bankName},-->
<!--                remain_point = #{item.remainPoint}-->
<!--            </set>-->
<!--            WHERE id = #{item.id}-->
<!--        </foreach>-->
<!--    </update>-->

    <!-- 该语句更新需要设置 pid_no 字段唯一约束，如果是使用主键id更新则不需要另外设置唯一约束 -->
    <insert id="batchInsertOrUpdate" parameterType="java.util.List">
        INSERT INTO t_app_user (pid_no, bank_no, bank_name, remain_point)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.pidNo}, #{item.bankNo}, #{item.bankName}, #{item.remainPoint})
        </foreach>
        ON DUPLICATE KEY UPDATE
        pid_no = VALUES(pid_no),
        bank_no = VALUES(bank_no),
        bank_name = VALUES(bank_name),
        remain_point = VALUES(remain_point);
    </insert>






    <!--查询所有页面数据-->
    <!--    <select id="selectEpassDeviceWhiteList" resultMap="BaseResultMap">-->
    <!--        select-->
    <!--        <include refid="Base_Column_List"/>-->
    <!--        from eiop_omg_epass_device-->
    <!--        where status = #{status}-->
    <!--        and last_update_time >= #{batchDateStart}-->
    <!--        and last_update_time &lt;= #{batchDateEnd}-->
    <!--        and id > #{autoId}-->
    <!--        limit #{pageSize}-->
    <!--    </select>-->


</mapper>